# https://leetcode.com/problems/unique-number-of-occurrences/

'''
1. 아이디어 :
    Map을 키를 배열의 값으로 하고 값을 등장하는 개수로 저장하고,
    Set은 Map의 값들을 저장하여 중복된 값들을 제거,
    마지막으로 Set과 Map의 크기를 비교하여 답을 출력
2. 시간복잡도 :
    O(n)
3. 자료구조 :
    맵, 스택
'''

class Solution {
    public boolean uniqueOccurrences(int[] arr) {
        Set<Integer> set = new HashSet<>();
        Map<Integer, Integer> map = new HashMap<>();

        for(int i = 0; i<arr.length; i++) {
            map.put(arr[i], map.getOrDefault(arr[i], 0) + 1);
        }

        for(Integer integer : map.values()) {
            set.add(integer);
        }

        return set.size() == map.size() ? true : false;
    }
}
