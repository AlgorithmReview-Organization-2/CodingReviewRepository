https://leetcode.com/problems/median-of-two-sorted-arrays/

'''
1. 아이디어 : 각 배열에 대한 포인터를 두고 해당하는 값을 비교해서 작은 값을 mergeArray에 넣고 포인터를 이동한다. 포인터 둘다 각 배열의 인덱스를 넘어가면 그 때 mergeArray의 median값을 찾아 반환한다. 
2. 시간복잡도 : O(m+n), m, n은 각각 nums1, nums2의 길이
3. 자료구조 :
    배열
    
class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
            int num1Length = nums1.length;
            int num2Length = nums2.length;
            int[] mergeArray = new int[num1Length + num2Length];
            int index = 0;
            int num1Index = 0;
            int num2Index = 0;

            while(num1Index < num1Length && num2Index < num2Length){
                if(nums1[num1Index] < nums2[num2Index]){
                    mergeArray[index++] = nums1[num1Index++];
                }else{
                    mergeArray[index++] = nums2[num2Index++];
                }
            }
            
            while(num1Index < num1Length){
                mergeArray[index++] = nums1[num1Index++];
            }
            
            while(num2Index < num2Length){
                mergeArray[index++] = nums2[num2Index++];
            }
            
            if(mergeArray.length % 2 == 0){
                return (double)(mergeArray[mergeArray.length/2] + mergeArray[mergeArray.length/2 - 1])/2;
            }
            else return mergeArray[mergeArray.length/2];
    }
}
