https://leetcode.com/problems/maximum-depth-of-binary-tree/

 //시간복잡도 : O(N), N은 노드의 개수
 //아이디어 : 노드의 양쪽으로 재귀호출을 하며 1씩 더해가고 그 중 큰 값을 반환한다.
 //자료구조 : 트리

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */


class Solution {
    public int maxDepth(TreeNode root) {

            if(root == null) return 0;
            return Math.max(maxDepth(root.left), maxDepth(root.right))+1;
        
    }
}
