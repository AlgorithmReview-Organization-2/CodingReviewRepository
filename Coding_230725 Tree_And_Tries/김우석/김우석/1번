https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/

//시간복잡도 : O(N), N은 배열의 길이
//아이디어 : 주어진 배열이 정렬되어 있으므로, 항상 중간 위치에 있는 값을 루트노드로 하고 그것을 기준으로 재귀를 통해 좌우 노드를 정해준다.
//자료구조 : 배열, 트리

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        return solution(nums, 0, nums.length - 1);
    }

    public TreeNode solution(int[] nums, int start, int end){
        if(start > end) return null;

        int mid = (start + end) / 2;
        TreeNode root = new TreeNode(nums[mid]);
        root.left = solution(nums, start, mid - 1);
        root.right = solution(nums, mid + 1, end);
        return root;
    }
}
