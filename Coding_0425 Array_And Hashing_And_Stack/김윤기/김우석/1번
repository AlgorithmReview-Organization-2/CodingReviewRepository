https://leetcode.com/problems/valid-parentheses/

1. 아이디어 :
    닫는 모양의 괄호를 찾아 유효한 문자열인지 확인한다.
2. 시간복잡도 :
    O(n^2) : n은 String의 길이* sublist에 걸리는 시간 n
3. 자료구조 :
    리스트

class Solution {
          //두 괄호가 올바르게 열고 닫히는지 확인하는 메서드 생성
    public boolean isOpposite(char a, char b){
            if(a == '(' && b != ')') {
                return false;
            }
            else if (a == '[' && b != ']'){
                return false;
            }
            else if(a == '{' && b != '}'){
                return false;
            }
            return true;
        }
        public boolean isValid(String s) {
            
            List<Character> temp = new ArrayList<>();
            if(s.length() % 2 != 0) return false;
            for(int i = 0; i < s.length(); i++){
                temp.add(s.charAt(i));
            }
            while(!temp.isEmpty()) {
                
                for (int i = 0; i < temp.size(); i++) {
                    if(temp.get(i).equals(')') || temp.get(i).equals(']') || temp.get(i).equals('}')){
                        if(i-1 < 0) return false;
                        if(isOpposite(temp.get(i-1), temp.get(i)) == false) return false;
                        //올바르게 닫혀있는 괄호라면 지워준다.
                        temp.subList(i-1,i+1).clear();
                        break;
                    }

                    if(i == temp.size() - 1) return false;
                }
            }
            //괄호가 다 지워졌다면 true 반환
            return true;
            
        }
}
