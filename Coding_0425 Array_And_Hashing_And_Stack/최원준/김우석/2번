https://leetcode.com/problems/third-maximum-number/

1. 아이디어 :
    먼저 배열을 내림차순으로 정렬하고, 반복문을 돌면서 중복여부를 확인하며 로직을 처리한다.
2. 시간복잡도 :
    O(2n) -> O(n) : n은 nums의 길이
3. 자료구조 :
    배열, 해시맵

class Solution {
    public int thirdMax(int[] nums) {
            int answer = 0;
            int rank = 0;
            HashMap<Integer, Integer> map = new HashMap<>();
            Integer[] temp = new Integer[nums.length];

            for(int i = 0; i < nums.length; i++){
                temp[i] = nums[i];
            }

            Arrays.sort(temp, Collections.reverseOrder());

            for(int i = 0; i < nums.length; i++){
                if(!map.containsKey(temp[i])){
                    rank += 1;
                    if(rank == 3) {
                        answer = temp[i];
                        return answer;
                    }
                    map.put(temp[i], rank);
                }
            }
            answer = temp[0];
            
            return answer;
        }
}
