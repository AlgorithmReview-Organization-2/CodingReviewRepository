https://leetcode.com/problems/combination-sum-iii/

1. 아이디어 : backtracking메소드 안에 있는 for문을 돌때 다음 재귀함수에서는 기존 시작점 다음부터 for문을 돌도록 재귀함수를 만든다. 1~9까지 숫자를 돌면서 문제에서 요구한 개수와 합이 될 때 answer 배열에 추가한다.
2. 시간복잡도 : O(N!), N은 n
3. 자료구조 : 배열

class Solution {
    public List<List<Integer>> answer = new ArrayList<>();
    public List<Integer> temp = new ArrayList<>();

    public void backtracking(int k, int n, int index, int tempSum){
        if(temp.size()==k && tempSum == n){
            answer.add(new ArrayList<>(temp));
            return;
        }

        for(int i = index; i < 10; i++){
            temp.add(i);
            tempSum += i;
            backtracking(k, n, i+1, tempSum);
            tempSum -= i;
            temp.remove(temp.size()-1);
        }

    }

    public List<List<Integer>> combinationSum3(int k, int n) {
        
        backtracking(k, n, 1, 0);

        return answer;        
    }
}
